#lang racket
(define (square x)
  (* x x))
(define (abs x)
  (if (< x 0)
      (- x)
      x))
(define (dist x y)
  (abs (- x y)))
(define (average x y)
  (/ (+ x y) 2))
(define (sqrt x)
  (define (good-enough? x y)
  (< (dist x (square y)) 0.00000001))
(define (sqrt-iter x g)
  (if (good-enough? x g)
      g
      (sqrt-iter x (average g (/ x g))
  )))
  (sqrt-iter x (/ x 2.0)))
(sqrt 49)